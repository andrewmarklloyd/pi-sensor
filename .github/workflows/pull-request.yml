name: Main Build
on:
  pull_request:
    branches: [ main ]
  workflow_dispatch:
jobs:
  pull_request:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.16.0'
      - name: Start tailscale
        uses: tailscale/github-action@v1
        with:
          authkey: ${{ secrets.TAILSCALE_AUTHKEY }}
      - name: get ip
        run: curl https://ifconfig.me/
      - name: sleep
        run: sleep 30
      - name: cert
        env:
          OPCONNECT_CERT: ${{ secrets.OPCONNECT_CERT }}
        run: echo "${OPCONNECT_CERT}" > opconnect.crt && sudo mv opconnect.crt /usr/local/share/ca-certificates/opconnect.crt && sudo update-ca-certificates
      - name: Load ssh key
        id: op-load-ssh-key
        uses: 1password/load-secrets-action@v1
        env:
          OP_CONNECT_HOST: ${{ secrets.OP_CONNECT_HOST }}
          OP_CONNECT_TOKEN: ${{ secrets.OP_CONNECT_TOKEN }}
          SECRET: "op://github-ci/pi-sensor-agent-ssh-key/private key"
      - name: test deploy agent
        env:
          AGENT_SSH_KEY: ${{ steps.op-load-ssh-key.outputs.SECRET }}
        run: ./.github/scripts/deploy-agent.sh
      # - name: Check
      #   run: |
      #     make vet
      #     make test
      # - name: Run build
      #   run: |
      #     make build-ci
      # - name: Deploy DO
      #   env:
      #     DO_ACCESS_TOKEN: ${{ secrets.DO_ACCESS_TOKEN }}
      #     GITHUB_SHA: ${{ github.sha }}
      #     DO_APP_ID: ${{ secrets.DO_APP_ID }}
      #     OPCONNECT_CERT: ${{ secrets.OPCONNECT_CERT }}
      #   run: ./.github/scripts/deploy-do.sh
      # - name: Deploy Heroku Staging
      #   env:
      #     HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      #     GITHUB_SHA:  ${{ github.sha }}
      #   run: ./.github/scripts/deploy-heroku.sh pi-sensor-staging
