- name: Deploy server
  hosts: all
  remote_user: mqtt-server
  become: true
  # todo: fail when these env vars are unset
  vars:
    MOSQUITTO_SERVER_USER: "{{ lookup('ansible.builtin.env', 'MOSQUITTO_SERVER_USER') }}"
    MOSQUITTO_SERVER_PASSWORD: "{{ lookup('ansible.builtin.env', 'MOSQUITTO_SERVER_PASSWORD') }}"
    MOSQUITTO_AGENT_USER: "{{ lookup('ansible.builtin.env', 'MOSQUITTO_AGENT_USER') }}"
    MOSQUITTO_AGENT_PASSWORD: "{{ lookup('ansible.builtin.env', 'MOSQUITTO_AGENT_PASSWORD') }}"
    MOSQUITTO_HA_USER: "{{ lookup('ansible.builtin.env', 'MOSQUITTO_HA_USER') }}"
    datadog_api_key: "{{ lookup('ansible.builtin.env', 'DD_API_KEY') }}"
  tasks:
  - name: Ensure passwd file exists
    copy:
      content: ""
      dest: /etc/mosquitto/passwd
      force: false
      group: sys
      owner: root
      mode: 0664
  - name: Configure server mosquitto_passwd
    shell:
      cmd: sudo mosquitto_passwd -b /etc/mosquitto/passwd {{ MOSQUITTO_SERVER_USER }} {{ MOSQUITTO_SERVER_PASSWORD }}
  - name: Configure agent mosquitto_passwd
    shell:
      cmd: sudo mosquitto_passwd -b /etc/mosquitto/passwd {{ MOSQUITTO_AGENT_USER }} {{ MOSQUITTO_AGENT_PASSWORD }}
  - name: Check if mosquitto.conf exists
    stat:
      path: /etc/mosquitto/conf.d/mosquitto.conf
    register: stat_result
  - name: Determine if certbot has run
    shell:
      cmd: grep cafile /etc/mosquitto/conf.d/mosquitto.conf
    register: cafile_result
    when: stat_result.stat.exists
  - name: Copy mosquitto.conf
    ansible.builtin.copy:
      src: ./mosquitto.conf
      dest: /etc/mosquitto/conf.d/mosquitto.conf
      mode: 0664
      owner: root
      group: root
      force: yes
    # certbot writes config to mosquitto.conf
    when: (stat_result.stat.exists) and ("'cafile' not in cafile_result.stdout")
  - name: Write mosquitto acl file
    ansible.builtin.template:
      src: ./acl.file
      dest: /etc/mosquitto/acl.file
      owner: root
      group: root
      force: yes
  - name: Restart mosquitto systemd unit
    become: true
    systemd:
      daemon_reload: yes
      enabled: yes
      force: yes
      name: mosquitto
      state: restarted
  - name: Import the Datadog Agent role from the Datadog collection
    import_role:
      name: datadog.dd.agent
    vars:
      datadog_config:
        tags:
          - "service:pi-sensor"
          - "source:mqtt-server"
