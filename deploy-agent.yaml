- name: Deploy Agents
  hosts: all
  remote_user: pi
  become: true
  # todo: fail when these env vars are unset
  vars:
    OP_CONNECT_TOKEN: "{{ lookup('ansible.builtin.env', 'OP_CONNECT_TOKEN') }}"
    OP_CONNECT_HOST: "{{ lookup('ansible.builtin.env', 'OP_CONNECT_HOST') }}"
  tasks:
  - name: Make directory
    file:
      path: /usr/local/src/pi-sensor-agent/
      state: directory
  - name: Write 1password env file
    ansible.builtin.template:
      src: ./agent/deployment/op-env.j2
      dest: /usr/local/src/pi-sensor-agent/.op-env
      owner: root
      group: root
    no_log: True
    register: onepass_env

  - name: Copy log-forwader binary
    ansible.builtin.copy:
      src: ./build/agent-log-forwarder
      dest: /usr/local/src/pi-sensor-agent/agent-log-forwarder
      mode: '0755'
      owner: root
      group: root
      force: yes
    register: forwarder_binary
  - name: Write forwarder op cli env-file template
    ansible.builtin.template:
      src: ./log-forwarder/deployment/env-file.tmpl
      dest: /usr/local/src/pi-sensor-agent/.forwarder-env-file.tmpl
      owner: root
      group: root
      force: yes
  - name: Copy forwarder systemd unit file
    ansible.builtin.template:
      src: ./log-forwarder/deployment/systemd-unit.service.j2
      dest: /etc/systemd/system/agent-log-forwarder.service
      owner: root
      group: root
    register: forwarder_systemd
  - name: Restart forwarder systemd unit
    become: true
    systemd:
      daemon_reload: yes
      enabled: yes
      force: yes
      name: agent-log-forwarder
      state: restarted
    when: forwarder_binary.changed | bool or forwarder_systemd.changed | bool or onepass_env.changed | bool

  - name: Write agent op cli env-file template
    ansible.builtin.template:
      src: ./agent/deployment/env-file.tmpl
      dest: /usr/local/src/pi-sensor-agent/.env-file.tmpl
      owner: root
      group: root
      force: yes
  - name: Copy agent systemd unit file
    ansible.builtin.template:
      src: ./agent/deployment/systemd-unit.service.j2
      dest: /etc/systemd/system/pi-sensor-agent-{{ item.sensor_source }}.service
      owner: root
      group: root
    with_items:
      - "{{ agents }}"
    register: agent_systemd
  - name: Copy agent binary
    ansible.builtin.copy:
      src: ./build/pi-sensor-agent
      dest: /usr/local/src/pi-sensor-agent/pi-sensor-agent
      mode: '0755'
      owner: pi
      group: pi
      force: yes
    register: agent_binary
  - name: Restart agent systemd unit
    become: true
    systemd:
      daemon_reload: yes
      enabled: yes
      force: yes
      name: pi-sensor-agent-{{ item.sensor_source }}
      state: restarted
    with_items:
      - "{{ agents }}"
    when: agent_binary.changed | bool or agent_systemd.changed | bool or onepass_env.changed | bool
